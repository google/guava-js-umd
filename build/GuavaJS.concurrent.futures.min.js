GuavaJS.Concurrent.Futures=GuavaJS.Concurrent.Futures||function(){var a=GuavaJS.Collect.Iterables,b=function(){var b=this,c=!1,d=!1,e=null,f=new Array,g=function(){d||(e=Array.prototype.slice.call(arguments),c=!0,a.isNullOrEmpty(f)||(a.iterate(f,function(a){try{a.apply(b,e)}catch(a){}}),f=new Array))};return g.addCallback=function(a){d||(c?a.apply(b,e):f.push(a))},g.isDone=function(){return c||d},g.get=function(){return e},g.cancel=function(){d=!0},g.isCancelled=function(){return d},g};return{Future:b}}();